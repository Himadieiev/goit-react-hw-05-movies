{"version":3,"file":"static/js/753.6a09fc90.chunk.js","mappings":"oOACA,EAA6B,2BAA7B,EAA2E,iCAA3E,EAA8H,gC,SC6C9H,EA1Ce,SAAC,GAAsB,IAApBA,EAAmB,EAAnBA,aAChB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAkBA,OACE,kBAAMC,UAAWC,EAAgBC,SAbd,SAAAC,GACnBA,EAAEC,iBAEmB,KAAjBN,EAAMO,QAKVT,EAAaE,GACbC,EAAS,KALPO,MAAM,gCAMT,EAGC,WACE,kBACEN,UAAWC,EACXM,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,KAAK,QACLC,MAAOd,EACPe,SA1Bc,SAAAV,GAClBJ,EAASI,EAAEW,cAAcF,MAAMG,cAChC,KA0BG,mBAAQR,KAAK,SAASP,UAAWC,EAAjC,UACE,yCAIP,E,SCpCKe,EAAe,mCAAG,WAAMlB,GAAN,uFACCmB,EAAAA,EAAAA,IAAA,0DAC8BnB,EAD9B,wCAHb,qCAEY,cAChBoB,EADgB,yBAKfA,EAASC,KAAKC,SALC,2CAAH,sDAQrB,I,0BC2BA,EAjCe,WACb,OAA4BvB,EAAAA,EAAAA,UAAS,IAArC,eAAOwB,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAaH,EAAaI,IAAI,UAChCD,GACFE,EAAaF,EAEhB,GAAE,CAACN,EAAUG,IAEd,IAAMK,EAAY,mCAAG,WAAMF,GAAN,uFACUb,EAAgBa,GAD1B,OACbG,EADa,OAEnBV,EAAUU,GAFS,2CAAH,sDAKZC,EAAgB,mCAAG,WAAMnC,GAAN,iEACvB6B,EAAgB,CAAEO,OAAQpC,IAC1BiC,EAAajC,GAFU,2CAAH,sDAKtB,OACE,4BACE,SAAC,EAAD,CACEF,aAAcqC,EACdN,gBAAiBA,KAEnB,SAACQ,EAAA,EAAD,CAAWd,OAAQA,MAGxB,C","sources":["webpack://react-homework-template/./src/components/Search/Search.module.css?06df","components/Search/Search.jsx","services/apiSearchMovies.js","pages/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"Search_searchForm__0FeD+\",\"searchFormButton\":\"Search_searchFormButton__4P+Bw\",\"searchFormInput\":\"Search_searchFormInput__Ho92d\"};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport css from './Search.module.css';\n\nconst Search = ({ onSubmitForm }) => {\n  const [movie, setMovie] = useState('');\n\n  const handleInput = e => {\n    setMovie(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (movie.trim() === '') {\n      alert('Please enter a search keyword');\n      return;\n    }\n\n    onSubmitForm(movie);\n    setMovie('');\n  };\n\n  return (\n    <form className={css.searchForm} onSubmit={handleSubmit}>\n      <input\n        className={css.searchFormInput}\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        name=\"movie\"\n        value={movie}\n        onChange={handleInput}\n      />\n      <button type=\"submit\" className={css.searchFormButton}>\n        <span>Search</span>\n      </button>\n    </form>\n  );\n};\n\nSearch.propTypes = {\n  onSubmitForm: PropTypes.func.isRequired,\n};\n\nexport default Search;\n","import axios from 'axios';\n\nconst KEY = '39851f8ad616b0be865617a5920dae9b';\n\nconst getSearchMovies = async movie => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${movie}&include_adult=false&api_key=${KEY}`\n  );\n\n  return response.data.results;\n};\n\nexport default getSearchMovies;\n","import React, { useState, useEffect } from 'react';\nimport Search from 'components/Search/Search';\nimport getSearchMovies from 'services/apiSearchMovies';\nimport MovieList from 'components/MovieList/MovieList';\nimport { useLocation, useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const searchTerm = searchParams.get('search');\n    if (searchTerm) {\n      handleSearch(searchTerm);\n    }\n  }, [location, searchParams]);\n\n  const handleSearch = async searchTerm => {\n    const searchedMovies = await getSearchMovies(searchTerm);\n    setMovies(searchedMovies);\n  };\n\n  const handleFormSubmit = async movie => {\n    setSearchParams({ search: movie });\n    handleSearch(movie);\n  };\n\n  return (\n    <div>\n      <Search\n        onSubmitForm={handleFormSubmit}\n        setSearchParams={setSearchParams}\n      />\n      <MovieList movies={movies} />\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["onSubmitForm","useState","movie","setMovie","className","css","onSubmit","e","preventDefault","trim","alert","type","autoComplete","autoFocus","placeholder","name","value","onChange","currentTarget","toLowerCase","getSearchMovies","axios","response","data","results","movies","setMovies","location","useLocation","useSearchParams","searchParams","setSearchParams","useEffect","searchTerm","get","handleSearch","searchedMovies","handleFormSubmit","search","MovieList"],"sourceRoot":""}